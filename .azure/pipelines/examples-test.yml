pr:
  - master
variables:
  API_KEY: $(apiKey)
jobs:
  - job: thresholds
    displayName: Thresholds
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(API_KEY)
      - bash: >-
          infracost breakdown --path=examples/thresholds/code/plan.json
          --format=json --out-file=/tmp/infracost.json
        displayName: Run Infracost
      - bash: >
          # Read the breakdown JSON and get costs

          past=$(cat /tmp/infracost.json | jq -r "(.pastTotalMonthlyCost // 0) |
          tonumber")

          current=$(cat /tmp/infracost.json | jq -r "(.totalMonthlyCost // 0) |
          tonumber")

          cost_change=$(cat /tmp/infracost.json | jq -r "(.diffTotalMonthlyCost
          // 0) | tonumber")


          percent_change=999 # default to a high number so we post a comment if
          there's no past cost


          if [ "$past" != "0" ]; then
            percent_change=$(echo "100 * (($current - $past) / $past)" | bc -l)
          fi


          absolute_percent_change=$(echo "${percent_change#-}")


          echo "past: ${past}"

          echo "current: ${current}"

          echo "cost_change: ${cost_change}"

          echo "absolute_cost_change: ${cost_change#-}"

          echo "percent_change: ${percent_change}"

          echo "absolute_percent_change: ${absolute_percent_change}"


          # Set the calculated diffs as outputs to be used in future tasks/steps

          echo "##vso[task.setvariable
          variable=absolutePercentChange;]${absolute_percent_change}"

          echo "##vso[task.setvariable
          variable=percentChange;]${percent_change}"

          echo "##vso[task.setvariable
          variable=absoluteCostChange;]${absolute_cost_change}"

          echo "##vso[task.setvariable variable=costChange;]${cost_change}"
        displayName: Calculate Cost Change
      - bash: >-
          infracost output --path=/tmp/infracost.json
          --format=azure-repos-comment --show-skipped
          --out-file=/tmp/infracost_comment.md
        displayName: Generate Infracost comment
      - bash: echo "SUCCESS"
        displayName: Check the comment
        condition: gt(${{ variables.costChange }}, 80)
