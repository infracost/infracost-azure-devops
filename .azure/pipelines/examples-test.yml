pr:
  - master
  - azure-devops-tasks
name: Infracost.InfracostAzureDevops.Examples.Test
jobs:
  - job: multi_project_config_file
    displayName: Multi-project config file
    pool:
      vmImage: ubuntu-latest
    variables:
      - name: TF_ROOT
        value: examples/multi-project-config-file/code
    steps:
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(infracostApiKey)
          version: v0.10.0-beta.1
      - bash: git clone . /tmp/base
        displayName: Checkout base branch
      - bash: >-
          infracost breakdown --config-file=/tmp/base/$(TF_ROOT)/infracost.yml
          --format=json --out-file=/tmp/infracost-base.json
        displayName: Generate Infracost cost estimate baseline
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
        displayName: Replace m5 instance
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
        displayName: Replace t2 instance
      - bash: >-
          infracost diff --config-file=$(TF_ROOT)/infracost.yml --format=json
          --compare-to /tmp/infracost-base.json --out-file=/tmp/infracost.json
        displayName: Generate Infracost diff
      - bash: |-
          infracost comment github \
          --path /tmp/infracost.json \
          --github-token $(githubToken) \
          --pull-request 1 \
          --repo $(Build.Repository.Name) \
          --behavior update \
          --dry-run true \
          > /tmp/infracost_comment.md
        displayName: Post Infracost Comment
      - bash: >-
          diff -y ./testdata/multi_project_config_file_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
  - job: multi_project_matrix
    displayName: Multi-project matrix
    pool:
      vmImage: ubuntu-latest
    strategy:
      matrix:
        dev:
          AWS_ACCESS_KEY_ID: $(exampleDevAwsAccessKeyId)
          AWS_SECRET_ACCESS_KEY: $(exampleDevAwsSecretAccessKey)
          PROJECT: dev
        prod:
          AWS_ACCESS_KEY_ID: $(exampleProdAwsAccessKeyId)
          AWS_SECRET_ACCESS_KEY: $(exampleProdAwsSecretAccessKey)
          PROJECT: prod
      maxParallel: 2
    variables:
      - name: TF_ROOT
        value: examples/terraform-project/code
    steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
      - bash: terraform init
        displayName: Terraform init
        workingDirectory: $(TF_ROOT)/$(PROJECT)
      - bash: |
          terraform plan -out plan.cache
          terraform show -json plan.cache > plan.json
        displayName: Terraform plan
        workingDirectory: $(TF_ROOT)/$(PROJECT)
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(infracostApiKey)
          version: v0.10.0-beta.1
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
        displayName: Replace m5 instance
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
        displayName: Replace t2 instance
      - bash: >-
          infracost diff --path=$(TF_ROOT)/$(PROJECT)/plan.json --format=json
          --out-file=/tmp/infracost_$(PROJECT).json
        displayName: Generate Infracost diff
        env:
          AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
          AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
      - task: PublishBuildArtifacts@1
        displayName: Upload Infracost breakdown
        inputs:
          PathtoPublish: /tmp/infracost_$(PROJECT).json
          ArtifactName: infracost_project_jsons
          publishLocation: Container
  - job: multi_project_matrix_merge
    displayName: Multi-project matrix merge
    pool:
      vmImage: ubuntu-latest
    dependsOn:
      - multi_project_matrix
    steps:
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: current
          downloadType: single
          artifactName: infracost_project_jsons
          downloadPath: $(System.DefaultWorkingDirectory)
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(infracostApiKey)
          version: v0.10.0-beta.1
      - bash: |-
          infracost comment github \
          --path "infracost_project_jsons/*.json" \
          --github-token $(githubToken) \
          --pull-request 1 \
          --repo $(Build.Repository.Name) \
          --behavior update \
          --dry-run true \
          > /tmp/infracost_comment.md
        displayName: Post Infracost Comment
      - bash: >-
          diff -y ./testdata/multi_project_matrix_merge_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
  - job: multi_workspace_matrix
    displayName: Multi-workspace matrix
    pool:
      vmImage: ubuntu-latest
    strategy:
      matrix:
        dev:
          AWS_ACCESS_KEY_ID: $(exampleDevAwsAccessKeyId)
          AWS_SECRET_ACCESS_KEY: $(exampleDevAwsSecretAccessKey)
          WORKSPACE: dev
        prod:
          AWS_ACCESS_KEY_ID: $(exampleProdAwsAccessKeyId)
          AWS_SECRET_ACCESS_KEY: $(exampleProdAwsSecretAccessKey)
          WORKSPACE: prod
      maxParallel: 2
    variables:
      - name: TF_ROOT
        value: examples/plan-json/multi-workspace-matrix/code
    steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
      - bash: terraform init
        displayName: Terraform init
        workingDirectory: $(TF_ROOT)
      - bash: >
          terraform plan -out $(WORKSPACE)-plan.cache
          -var-file=$(WORKSPACE).tfvars

          terraform show -json $(WORKSPACE)-plan.cache > $(WORKSPACE)-plan.json
        env:
          TF_WORKSPACE: $(WORKSPACE)
        displayName: Terraform plan
        workingDirectory: $(TF_ROOT)
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(infracostApiKey)
          version: v0.10.0-beta.1
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
        displayName: Replace m5 instance
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
        displayName: Replace t2 instance
      - bash: >-
          infracost diff --path=$(TF_ROOT)/$(WORKSPACE)-plan.json --format=json
          --out-file=/tmp/infracost_$(WORKSPACE).json
        displayName: Generate Infracost diff
        env:
          AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
          AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
      - task: PublishBuildArtifacts@1
        displayName: Upload Infracost breakdown
        inputs:
          PathtoPublish: /tmp/infracost_$(WORKSPACE).json
          ArtifactName: infracost_workspace_jsons
          publishLocation: Container
  - job: multi_workspace_matrix_merge
    displayName: Multi-workspace matrix merge
    pool:
      vmImage: ubuntu-latest
    dependsOn:
      - multi_workspace_matrix
    steps:
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: current
          downloadType: single
          artifactName: infracost_workspace_jsons
          downloadPath: $(System.DefaultWorkingDirectory)
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(infracostApiKey)
          version: v0.10.0-beta.1
      - bash: |-
          infracost comment github \
          --path "infracost_workspace_jsons/*.json" \
          --github-token $(githubToken) \
          --pull-request 1 \
          --repo $(Build.Repository.Name) \
          --behavior update \
          --dry-run true \
          > /tmp/infracost_comment.md
        displayName: Post Infracost Comment
      - bash: >-
          diff -y ./testdata/multi_workspace_matrix_merge_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
  - job: terraform_cloud_enterprise
    displayName: Terraform Cloud/Enterprise
    pool:
      vmImage: ubuntu-latest
    variables:
      - name: TF_ROOT
        value: examples/plan-json/terraform-cloud-enterprise/code
      - name: TFC_HOST
        value: app.terraform.io
    steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
      - bash: |
          cat <<EOF > $HOME/.terraformrc
          credentials "$(TFC_HOST)" {
            token = "$(tfcToken)"
          }
          EOF
          terraform init
        displayName: Terraform init
        workingDirectory: $(TF_ROOT)
      - bash: >
          echo "Running terraform plan"

          terraform plan -no-color | tee /tmp/plan_logs.txt


          echo "Parsing the run URL and ID from the logs"

          run_url=$(grep -A1 'To view this run' /tmp/plan_logs.txt | tail -n 1)

          run_id=$(basename $run_url)


          echo "Getting the run plan response from
          https://$TFC_HOST/api/v2/runs/$run_id/plan"

          run_plan_resp=$(wget -q -O - --header="Authorization: Bearer
          $(tfcToken)" "https://$TFC_HOST/api/v2/runs/$run_id/plan")

          echo "Extracting the plan JSON path"

          plan_json_path=$(echo $run_plan_resp | sed
          's/.*\"json-output\":\"\([^\"]*\)\".*/\1/')


          echo "Downloading the plan JSON from https://$TFC_HOST$plan_json_path"

          wget -q -O plan.json --header="Authorization: Bearer $(tfcToken)"
          "https://$TFC_HOST$plan_json_path"
        displayName: Retrieve plan JSONs
        workingDirectory: $(TF_ROOT)
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(infracostApiKey)
          version: v0.10.0-beta.1
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
        displayName: Replace m5 instance
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
        displayName: Replace t2 instance
      - bash: >-
          infracost diff --path $(TF_ROOT)/plan.json --format=json
          --out-file=/tmp/infracost.json
        displayName: Generate Infracost diff
      - bash: |-
          infracost comment github \
          --path /tmp/infracost.json \
          --github-token $(githubToken) \
          --pull-request 1 \
          --repo $(Build.Repository.Name) \
          --behavior update \
          --dry-run true \
          > /tmp/infracost_comment.md
        displayName: Post Infracost Comment
      - bash: >-
          diff -y ./testdata/terraform_cloud_enterprise_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
  - job: terragrunt_project
    displayName: Terragrunt project
    pool:
      vmImage: ubuntu-latest
    variables:
      - name: TF_ROOT
        value: examples/plan-json/terragrunt/code
    steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
      - bash: >
          INSTALL_LOCATION="$(Build.SourcesDirectory)/bin"

          mkdir -p ${INSTALL_LOCATION}


          curl -sL
          "https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64"
          > ${INSTALL_LOCATION}/terragrunt

          chmod +x ${INSTALL_LOCATION}/terragrunt


          echo "##vso[task.setvariable
          variable=PATH;]$(PATH):${INSTALL_LOCATION}"
        displayName: Setup Terragrunt
      - bash: >
          terragrunt run-all --terragrunt-ignore-external-dependencies plan -out
          plan.cache


          # Find the plan files

          plans=($(find . -name plan.cache | tr '\n' ' '))


          # Generate plan JSON files by running terragrunt show for each plan
          file

          planjsons=()

          for plan in "${plans[@]}"; do
            # Find the Terraform working directory for running terragrunt show
            # We want to take the dir of the plan file and strip off anything after the .terraform-cache dir
            # to find the location of the Terraform working directory that contains the Terraform code
            dir=$(dirname $plan)
            dir=$(echo "$dir" | sed 's/\(.*\)\/\.terragrunt-cache\/.*/\1/')

            echo "Running terragrunt show for $(basename $plan) for $dir";
            terragrunt show -json $(basename $plan) --terragrunt-working-dir=$dir --terragrunt-no-auto-init > $dir/plan.json
            planjsons=(${planjsons[@]} "$dir/plan.json")
          done


          # Sort the plan JSONs so we get consistent project ordering in the
          config file

          IFS=$'\n' planjsons=($(sort <<<"${planjsons[*]}"))


          # Generate Infracost config file

          echo -e "version: 0.1\n\nprojects:\n" > infracost.yml

          for planjson in "${planjsons[@]}"; do
            echo -e "  - path: $(TF_ROOT)/$planjson" >> infracost.yml
          done
        displayName: Generate plan JSONs
        workingDirectory: $(TF_ROOT)
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(infracostApiKey)
          version: v0.10.0-beta.1
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
        displayName: Replace m5 instance
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
        displayName: Replace t2 instance
      - bash: >-
          infracost diff --config-file=$(TF_ROOT)/infracost.yml --format=json
          --out-file=/tmp/infracost.json
        displayName: Generate Infracost diff
      - bash: |-
          infracost comment github \
          --path /tmp/infracost.json \
          --github-token $(githubToken) \
          --pull-request 1 \
          --repo $(Build.Repository.Name) \
          --behavior update \
          --dry-run true \
          > /tmp/infracost_comment.md
        displayName: Post Infracost Comment
      - bash: >-
          diff -y ./testdata/terragrunt_project_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
  - job: private_terraform_module
    displayName: Private Terraform module
    pool:
      vmImage: ubuntu-latest
    variables:
      - name: TF_ROOT
        value: examples/private-terraform-module/code
    steps:
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(infracostApiKey)
          version: v0.10.0-beta.1
      - bash: >
          mkdir -p .ssh

          echo "$(echo $GIT_SSH_KEY_BASE_64 | base64 -d)" > .ssh/git_ssh_key

          chmod 400 .ssh/git_ssh_key

          echo "##vso[task.setvariable variable=GIT_SSH_COMMAND;]ssh -i
          $(pwd)/.ssh/git_ssh_key -o 'StrictHostKeyChecking=no'"
        displayName: Add GIT_SSH_KEY
        env:
          GIT_SSH_KEY_BASE_64: $(gitSshKeyBase64)
      - bash: git clone . /tmp/base
        displayName: Checkout base branch
      - bash: >-
          infracost breakdown --path=/tmp/base/$(TF_ROOT) --format=json
          --out-file=/tmp/infracost-base.json
        displayName: Generate Infracost cost estimate baseline
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
        displayName: Replace m5 instance
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
        displayName: Replace t2 instance
      - bash: >-
          infracost diff --path=$(TF_ROOT) --format=json --compare-to
          /tmp/infracost-base.json --out-file=/tmp/infracost.json
        displayName: Generate Infracost diff
      - bash: |-
          infracost comment github \
          --path /tmp/infracost.json \
          --github-token $(githubToken) \
          --pull-request 1 \
          --repo $(Build.Repository.Name) \
          --behavior update \
          --dry-run true \
          > /tmp/infracost_comment.md
        displayName: Post Infracost Comment
      - bash: >-
          diff -y ./testdata/private_terraform_module_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
  - job: sentinel
    displayName: Sentinel
    pool:
      vmImage: ubuntu-latest
    variables:
      - name: TF_ROOT
        value: examples/terraform-project/code
    steps:
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(infracostApiKey)
          version: v0.10.0-beta.1
      - bash: >
          INSTALL_LOCATION="$(Build.SourcesDirectory)/sentinel"

          mkdir -p ${INSTALL_LOCATION}


          curl -o sentinel.zip
          https://releases.hashicorp.com/sentinel/0.18.4/sentinel_0.18.4_linux_amd64.zip

          unzip -d ${INSTALL_LOCATION} sentinel.zip


          echo "##vso[task.setvariable
          variable=PATH;]$(PATH):${INSTALL_LOCATION}"
        displayName: Setup Sentinel
      - bash: git clone . /tmp/base
        displayName: Checkout base branch
      - bash: >-
          infracost breakdown --path=/tmp/base/$(TF_ROOT) --format=json
          --out-file=/tmp/infracost-base.json
        displayName: Generate Infracost cost estimate baseline
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
        displayName: Replace m5 instance
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
        displayName: Replace t2 instance
      - bash: >-
          infracost diff --path=$(TF_ROOT) --format=json --compare-to
          /tmp/infracost-base.json --out-file=/tmp/infracost.json
        displayName: Generate Infracost diff
      - bash: >-
          sentinel apply -global breakdown="$(cat /tmp/infracost.json)"
          examples/sentinel/policy/policy.policy | tee /tmp/sentinel.out
        displayName: Run Sentinel
      - bash: |
          result=$(</tmp/sentinel.out)

          if [ "$result" != "Pass - policy.policy" ]; then
            echo "##vso[task.logissue type=error]Policy check failed"
            echo "##vso[task.logissue type=error]$result"
            echo "##vso[task.complete result=Failed;]DONE"
          else
            echo "Policy check passed."
          fi
        displayName: Check Policies
  - job: slack
    displayName: Slack
    pool:
      vmImage: ubuntu-latest
    variables:
      - name: TF_ROOT
        value: examples/terraform-project/code
    steps:
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(infracostApiKey)
          version: v0.10.0-beta.1
      - bash: git clone . /tmp/base
        displayName: Checkout base branch
      - bash: >-
          infracost breakdown --path=/tmp/base/$(TF_ROOT) --format=json
          --out-file=/tmp/infracost-base.json
        displayName: Generate Infracost cost estimate baseline
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
        displayName: Replace m5 instance
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
        displayName: Replace t2 instance
      - bash: >-
          infracost diff --path=$(TF_ROOT) --format=json --compare-to
          /tmp/infracost-base.json --out-file=/tmp/infracost.json
        displayName: Generate Infracost diff
      - bash: |-
          infracost comment github \
          --path /tmp/infracost.json \
          --github-token $(githubToken) \
          --pull-request 1 \
          --repo $(Build.Repository.Name) \
          --behavior update \
          --dry-run true \
          > /tmp/infracost_comment.md
        displayName: Post Infracost Comment
      - bash: diff -y ./testdata/slack_comment_golden.md /tmp/infracost_comment.md
        displayName: Check the comment
      - bash: >-
          infracost output --path /tmp/infracost.json --format slack-message
          --show-skipped --out-file /tmp/slack_message.json
        displayName: Generate Slack message
      - bash: >-
          diff -y <(jq --sort-keys . ./testdata/slack_slack_message_golden.json)
          <(jq --sort-keys . /tmp/slack_message.json)
        displayName: Check the Slack message
  - job: terraform_project
    displayName: Terraform project
    pool:
      vmImage: ubuntu-latest
    variables:
      - name: TF_ROOT
        value: examples/terraform-project/code
    steps:
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(infracostApiKey)
          version: v0.10.0-beta.1
      - bash: git clone . /tmp/base
        displayName: Checkout base branch
      - bash: >-
          infracost breakdown --path=/tmp/base/$(TF_ROOT) --format=json
          --out-file=/tmp/infracost-base.json
        displayName: Generate Infracost cost estimate baseline
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/m5.4xlarge/m5.8xlarge/g'
        displayName: Replace m5 instance
      - bash: >-
          find examples -type f  -name '*.tf' -o -name '*.hcl' -o -name
          '*.tfvars'  | xargs sed -i 's/t2.micro/t2.medium/g'
        displayName: Replace t2 instance
      - bash: >-
          infracost diff --path=$(TF_ROOT) --format=json --compare-to
          /tmp/infracost-base.json --out-file=/tmp/infracost.json
        displayName: Generate Infracost diff
      - bash: |-
          infracost comment github \
          --path /tmp/infracost.json \
          --github-token $(githubToken) \
          --pull-request 1 \
          --repo $(Build.Repository.Name) \
          --behavior update \
          --dry-run true \
          > /tmp/infracost_comment.md
        displayName: Post Infracost Comment
      - bash: >-
          diff -y ./testdata/terraform_project_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
