pr:
  - master
name: Infracost.InfracostAzureDevops.Examples.Test
variables:
  API_KEY: $(apiKey)
jobs:
  - job: multi_project_config_file
    displayName: Multi-project config file
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(API_KEY)
      - bash: >-
          infracost breakdown
          --config-file=examples/multi-project/code/infracost.yml --format=json
          --out-file=/tmp/infracost.json
        displayName: Run Infracost
        env:
          DEV_AWS_ACCESS_KEY_ID: $(exampleDevAwsAccessKeyId)
          DEV_AWS_SECRET_ACCESS_KEY: $(exampleDevAwsSecretAccessKey)
          PROD_AWS_ACCESS_KEY_ID: $(exampleProdAwsAccessKeyId)
          PROD_AWS_SECRET_ACCESS_KEY: $(exampleProdAwsSecretAccessKey)
      - bash: >-
          infracost output --path=/tmp/infracost.json
          --format=azure-repos-comment --show-skipped
          --out-file=/tmp/infracost_comment.md
        displayName: Generate Infracost comment
      - bash: >-
          diff ./testdata/multi_project_config_file_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
  - job: multi_project_matrix
    displayName: Multi-project matrix
    pool:
      vmImage: ubuntu-latest
    strategy:
      matrix:
        dev:
          AWS_ACCESS_KEY_ID: $(exampleDevAwsAccessKeyId)
          AWS_SECRET_ACCESS_KEY: $(exampleDevAwsSecretAccessKey)
          DIR: dev
        prod:
          AWS_ACCESS_KEY_ID: $(exampleProdAwsAccessKeyId)
          AWS_SECRET_ACCESS_KEY: $(exampleProdAwsSecretAccessKey)
          DIR: prod
      maxParallel: 2
    steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(API_KEY)
      - bash: >-
          infracost breakdown --path=examples/multi-project/code/$(DIR)
          --format=json --out-file=/tmp/infracost_$(DIR).json
        displayName: Run Infracost
        env:
          AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
          AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)
      - task: PublishBuildArtifacts@1
        displayName: Upload Infracost breakdown
        inputs:
          PathtoPublish: /tmp/infracost_$(DIR).json
          ArtifactName: infracost_jsons
          publishLocation: Container
  - job: multi_project_matrix_merge
    displayName: Multi-project matrix merge
    pool:
      vmImage: ubuntu-latest
    dependsOn:
      - multi_project_matrix
    steps:
      - task: DownloadBuildArtifacts@0
        inputs:
          buildType: current
          downloadType: single
          artifactName: infracost_jsons
          downloadPath: $(System.DefaultWorkingDirectory)
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(API_KEY)
      - bash: >
          infracost output --path="infracost_jsons/*.json" --format=json
          --out-file=/tmp/infracost_combined.json
        displayName: Combine the results
      - bash: >-
          infracost output --path=/tmp/infracost_combined.json
          --format=azure-repos-comment --show-skipped
          --out-file=/tmp/infracost_comment.md
        displayName: Generate Infracost comment
      - bash: >-
          diff ./testdata/multi_project_matrix_merge_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
  - job: private_terraform_module
    displayName: Private Terraform module
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
      - bash: >
          mkdir -p .ssh

          echo "$(echo $GIT_SSH_KEY_BASE_64 | base64 -d)" > .ssh/git_ssh_key

          chmod 400 .ssh/git_ssh_key

          echo "##vso[task.setvariable variable=GIT_SSH_COMMAND;]ssh -i
          $(pwd)/.ssh/git_ssh_key -o 'StrictHostKeyChecking=no'"
        displayName: Add git SSH key
        env:
          GIT_SSH_KEY_BASE_64: $(gitSshKeyBase64)
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(apiKey)
      - bash: >
          infracost breakdown --path=examples/private-terraform-module/code
          --format=json --out-file=/tmp/infracost.json
        displayName: Run Infracost
      - bash: >-
          infracost output --path=/tmp/infracost.json
          --format=azure-repos-comment --show-skipped
          --out-file=/tmp/infracost_comment.md
        displayName: Generate Infracost comment
      - bash: >-
          diff ./testdata/private_terraform_module_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
  - job: terraform_cloud_enterprise
    displayName: Terraform Cloud/Enterprise
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(API_KEY)
      - bash: >-
          infracost breakdown --path=examples/terraform-cloud-enterprise/code
          --format=json --out-file=/tmp/infracost.json
        displayName: Run Infracost
        env:
          INFRACOST_TERRAFORM_CLOUD_TOKEN: $(tfcToken)
          INFRACOST_TERRAFORM_CLOUD_HOST: app.terraform.io
      - bash: >-
          infracost output --path=/tmp/infracost.json
          --format=azure-repos-comment --show-skipped
          --out-file=/tmp/infracost_comment.md
        displayName: Generate Infracost comment
      - bash: >-
          diff ./testdata/terraform_cloud_enterprise_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
  - job: terraform_plan_json
    displayName: Terraform plan JSON
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(API_KEY)
      - bash: >-
          infracost breakdown --path=examples/terraform-plan-json/code/plan.json
          --format=json --out-file=/tmp/infracost.json
        displayName: Run Infracost
      - bash: >-
          infracost output --path=/tmp/infracost.json
          --format=azure-repos-comment --show-skipped
          --out-file=/tmp/infracost_comment.md
        displayName: Generate Infracost comment
      - bash: >-
          diff ./testdata/terraform_plan_json_comment_golden.md
          /tmp/infracost_comment.md
        displayName: Check the comment
  - job: terragrunt
    displayName: Terragrunt
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: TerraformInstaller@0
        displayName: Install Terraform
      - bash: >
          INSTALL_LOCATION="$(Build.SourcesDirectory)/bin"

          mkdir -p ${INSTALL_LOCATION}


          curl -sL
          "https://github.com/gruntwork-io/terragrunt/releases/latest/download/terragrunt_linux_amd64"
          > ${INSTALL_LOCATION}/terragrunt

          chmod +x ${INSTALL_LOCATION}/terragrunt


          echo "##vso[task.setvariable
          variable=PATH;]$(PATH):${INSTALL_LOCATION}"
        displayName: Setup Terragrunt
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(API_KEY)
      - bash: >-
          infracost breakdown --path=examples/terragrunt/code --format=json
          --out-file=/tmp/infracost.json
        displayName: Run Infracost
      - bash: >-
          infracost output --path=/tmp/infracost.json
          --format=azure-repos-comment --show-skipped
          --out-file=/tmp/infracost_comment.md
        displayName: Generate Infracost comment
      - bash: diff ./testdata/terragrunt_comment_golden.md /tmp/infracost_comment.md
        displayName: Check the comment
  - job: thresholds
    displayName: Thresholds
    pool:
      vmImage: ubuntu-latest
    steps:
      - task: InfracostSetup@0
        displayName: Setup Infracost
        inputs:
          apiKey: $(API_KEY)
      - bash: >-
          infracost breakdown --path=examples/thresholds/code/plan.json
          --format=json --out-file=/tmp/infracost.json
        displayName: Run Infracost
      - bash: >
          # Read the breakdown JSON and get costs

          past=$(cat /tmp/infracost.json | jq -r "(.pastTotalMonthlyCost // 0) |
          tonumber")

          current=$(cat /tmp/infracost.json | jq -r "(.totalMonthlyCost // 0) |
          tonumber")

          cost_change=$(cat /tmp/infracost.json | jq -r "(.diffTotalMonthlyCost
          // 0) | tonumber")


          percent_change=999 # default to a high number so we post a comment if
          there's no past cost


          if [ "$past" != "0" ]; then
            percent_change=$(echo "100 * (($current - $past) / $past)" | bc -l)
          fi


          absolute_percent_change=$(echo "${percent_change#-}")


          echo "past: ${past}"

          echo "current: ${current}"

          echo "cost_change: ${cost_change}"

          echo "absolute_cost_change: ${cost_change#-}"

          echo "percent_change: ${percent_change}"

          echo "absolute_percent_change: ${absolute_percent_change}"


          # Set the calculated diffs as outputs to be used in future tasks/steps

          echo "##vso[task.setvariable
          variable=absolutePercentChange;]${absolute_percent_change}"

          echo "##vso[task.setvariable
          variable=percentChange;]${percent_change}"

          echo "##vso[task.setvariable
          variable=absoluteCostChange;]${cost_change#-}"

          echo "##vso[task.setvariable variable=costChange;]${cost_change}"
        displayName: Calculate Cost Change
      - bash: >-
          infracost output --path=/tmp/infracost.json
          --format=azure-repos-comment --show-skipped
          --out-file=/tmp/infracost_comment.md
        displayName: Generate Infracost comment
      - bash: diff ./testdata/thresholds_comment_golden.md /tmp/infracost_comment.md
        displayName: Check the comment
